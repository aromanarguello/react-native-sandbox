ea70d08931288cf647e6a5c0a5bab49b
'use strict';

var NativeModules = require("../BatchedBridge/NativeModules");

var invariant = require('invariant');

var FrameRateLogger = {
  setGlobalOptions: function setGlobalOptions(options) {
    if (options.debug !== undefined) {
      invariant(NativeModules.FrameRateLogger, 'Trying to debug FrameRateLogger without the native module!');
    }

    if (NativeModules.FrameRateLogger) {
      var optionsClone = {
        debug: !!options.debug,
        reportStackTraces: !!options.reportStackTraces
      };
      Object.freeze(optionsClone);
      Object.seal(optionsClone);
      NativeModules.FrameRateLogger.setGlobalOptions(optionsClone);
    }
  },
  setContext: function setContext(context) {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.setContext(context);
  },
  beginScroll: function beginScroll() {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.beginScroll();
  },
  endScroll: function endScroll() {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.endScroll();
  }
};
module.exports = FrameRateLogger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZyYW1lUmF0ZUxvZ2dlci5qcyJdLCJuYW1lcyI6WyJOYXRpdmVNb2R1bGVzIiwicmVxdWlyZSIsImludmFyaWFudCIsIkZyYW1lUmF0ZUxvZ2dlciIsInNldEdsb2JhbE9wdGlvbnMiLCJvcHRpb25zIiwiZGVidWciLCJ1bmRlZmluZWQiLCJvcHRpb25zQ2xvbmUiLCJyZXBvcnRTdGFja1RyYWNlcyIsIk9iamVjdCIsImZyZWV6ZSIsInNlYWwiLCJzZXRDb250ZXh0IiwiY29udGV4dCIsImJlZ2luU2Nyb2xsIiwiZW5kU2Nyb2xsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBVUE7O0FBRUEsSUFBTUEsYUFBYSxHQUFHQyxPQUFPLGtDQUE3Qjs7QUFFQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxXQUFELENBQXpCOztBQWtCQSxJQUFNRSxlQUFlLEdBQUc7QUFLdEJDLEVBQUFBLGdCQUFnQixFQUFFLDBCQUFTQyxPQUFULEVBR2Y7QUFDRCxRQUFJQSxPQUFPLENBQUNDLEtBQVIsS0FBa0JDLFNBQXRCLEVBQWlDO0FBQy9CTCxNQUFBQSxTQUFTLENBQ1BGLGFBQWEsQ0FBQ0csZUFEUCxFQUVQLDREQUZPLENBQVQ7QUFJRDs7QUFDRCxRQUFJSCxhQUFhLENBQUNHLGVBQWxCLEVBQW1DO0FBSWpDLFVBQU1LLFlBQVksR0FBRztBQUNuQkYsUUFBQUEsS0FBSyxFQUFFLENBQUMsQ0FBQ0QsT0FBTyxDQUFDQyxLQURFO0FBRW5CRyxRQUFBQSxpQkFBaUIsRUFBRSxDQUFDLENBQUNKLE9BQU8sQ0FBQ0k7QUFGVixPQUFyQjtBQUlBQyxNQUFBQSxNQUFNLENBQUNDLE1BQVAsQ0FBY0gsWUFBZDtBQUNBRSxNQUFBQSxNQUFNLENBQUNFLElBQVAsQ0FBWUosWUFBWjtBQUNBUixNQUFBQSxhQUFhLENBQUNHLGVBQWQsQ0FBOEJDLGdCQUE5QixDQUErQ0ksWUFBL0M7QUFDRDtBQUNGLEdBM0JxQjtBQWlDdEJLLEVBQUFBLFVBQVUsRUFBRSxvQkFBU0MsT0FBVCxFQUEwQjtBQUNwQ2QsSUFBQUEsYUFBYSxDQUFDRyxlQUFkLElBQ0VILGFBQWEsQ0FBQ0csZUFBZCxDQUE4QlUsVUFBOUIsQ0FBeUNDLE9BQXpDLENBREY7QUFFRCxHQXBDcUI7QUEwQ3RCQyxFQUFBQSxXQTFDc0IseUJBMENSO0FBQ1pmLElBQUFBLGFBQWEsQ0FBQ0csZUFBZCxJQUNFSCxhQUFhLENBQUNHLGVBQWQsQ0FBOEJZLFdBQTlCLEVBREY7QUFFRCxHQTdDcUI7QUFtRHRCQyxFQUFBQSxTQW5Ec0IsdUJBbURWO0FBQ1ZoQixJQUFBQSxhQUFhLENBQUNHLGVBQWQsSUFBaUNILGFBQWEsQ0FBQ0csZUFBZCxDQUE4QmEsU0FBOUIsRUFBakM7QUFDRDtBQXJEcUIsQ0FBeEI7QUF3REFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmYsZUFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgTmF0aXZlTW9kdWxlcyA9IHJlcXVpcmUoJy4uL0JhdGNoZWRCcmlkZ2UvTmF0aXZlTW9kdWxlcycpO1xuXG5jb25zdCBpbnZhcmlhbnQgPSByZXF1aXJlKCdpbnZhcmlhbnQnKTtcblxuLyoqXG4gKiBGbG93IEFQSSBmb3IgbmF0aXZlIEZyYW1lUmF0ZUxvZ2dlciBtb2R1bGUuIElmIHRoZSBuYXRpdmUgbW9kdWxlIGlzIG5vdCBpbnN0YWxsZWQsIGZ1bmN0aW9uIGNhbGxzXG4gKiBhcmUganVzdCBuby1vcHMuXG4gKlxuICogVHlwaWNhbCBiZWhhdmlvciBpcyB0aGF0IGBzZXRDb250ZXh0YCBpcyBjYWxsZWQgd2hlbiBhIG5ldyBzY3JlZW4gaXMgbG9hZGVkIChlLmcuIHZpYSBhXG4gKiBuYXZpZ2F0aW9uIGludGVncmF0aW9uKSwgYW5kIHRoZW4gYGJlZ2luU2Nyb2xsYCBpcyBjYWxsZWQgYnkgYFNjcm9sbFJlc3BvbmRlcmAgYXQgd2hpY2ggcG9pbnQgdGhlXG4gKiBuYXRpdmUgbW9kdWxlIHRoZW4gYmVnaW5zIHRyYWNraW5nIGZyYW1lIGRyb3BzLiBXaGVuIGBTY3JvbGxSZXNwb25kZXJgIGNhbGxzIGBlbmRTY3JvbGxgLCB0aGVcbiAqIG5hdGl2ZSBtb2R1bGUgZ2F0aGVycyB1cCBhbGwgaXQncyBmcmFtZSBkcm9wIGRhdGEgYW5kIHJlcG9ydHMgaXQgdmlhIGFuIGFuYWx5dGljcyBwaXBlbGluZSBmb3JcbiAqIGFuYWx5c2lzLlxuICpcbiAqIE5vdGUgdGhhdCBgYmVnaW5TY3JvbGxgIG1heSBiZSBjYWxsZWQgbXVsdGlwbGUgdGltZXMgYnkgYFNjcm9sbFJlc3BvbmRlcmAgLSB1bmNsZWFyIGlmIHRoYXQncyBhXG4gKiBidWcsIGJ1dCB0aGUgbmF0aXZlIG1vZHVsZSBzaG91bGQgYmUgcm9idXN0IHRvIHRoYXQuXG4gKlxuICogSW4gdGhlIGZ1dHVyZSB3ZSBtYXkgYWRkIHN1cHBvcnQgZm9yIHRyYWNraW5nIGZyYW1lIGRyb3BzIGluIG90aGVyIHR5cGVzIG9mIGludGVyYWN0aW9ucyBiZXlvbmRcbiAqIHNjcm9sbGluZy5cbiAqL1xuY29uc3QgRnJhbWVSYXRlTG9nZ2VyID0ge1xuICAvKipcbiAgICogRW5hYmxlIGBkZWJ1Z2AgdG8gc2VlIGxvY2FsIGxvZ3Mgb2Ygd2hhdCdzIGdvaW5nIG9uLiBgcmVwb3J0U3RhY2tUcmFjZXNgIHdpbGwgZ3JhYiBzdGFjayB0cmFjZXNcbiAgICogZHVyaW5nIFVJIHRocmVhZCBzdGFsbHMgYW5kIHVwbG9hZCB0aGVtIGlmIHRoZSBuYXRpdmUgbW9kdWxlIHN1cHBvcnRzIGl0LlxuICAgKi9cbiAgc2V0R2xvYmFsT3B0aW9uczogZnVuY3Rpb24ob3B0aW9uczoge1xuICAgIGRlYnVnPzogYm9vbGVhbixcbiAgICByZXBvcnRTdGFja1RyYWNlcz86IGJvb2xlYW4sXG4gIH0pIHtcbiAgICBpZiAob3B0aW9ucy5kZWJ1ZyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBpbnZhcmlhbnQoXG4gICAgICAgIE5hdGl2ZU1vZHVsZXMuRnJhbWVSYXRlTG9nZ2VyLFxuICAgICAgICAnVHJ5aW5nIHRvIGRlYnVnIEZyYW1lUmF0ZUxvZ2dlciB3aXRob3V0IHRoZSBuYXRpdmUgbW9kdWxlIScsXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAoTmF0aXZlTW9kdWxlcy5GcmFtZVJhdGVMb2dnZXIpIHtcbiAgICAgIC8vIEZyZWV6ZSB0aGUgb2JqZWN0IHRvIGF2b2lkIHRoZSBwcmVwYWNrIHdhcm5pbmcgKFBQMDAxNykgYWJvdXQgbGVha2luZ1xuICAgICAgLy8gdW5mcm96ZW4gb2JqZWN0cy5cbiAgICAgIC8vIE5lZWRzIHRvIGNsb25lIHRoZSBvYmplY3QgZmlyc3QgdG8gYXZvaWQgbW9kaWZ5aW5nIHRoZSBhcmd1bWVudC5cbiAgICAgIGNvbnN0IG9wdGlvbnNDbG9uZSA9IHtcbiAgICAgICAgZGVidWc6ICEhb3B0aW9ucy5kZWJ1ZyxcbiAgICAgICAgcmVwb3J0U3RhY2tUcmFjZXM6ICEhb3B0aW9ucy5yZXBvcnRTdGFja1RyYWNlcyxcbiAgICAgIH07XG4gICAgICBPYmplY3QuZnJlZXplKG9wdGlvbnNDbG9uZSk7XG4gICAgICBPYmplY3Quc2VhbChvcHRpb25zQ2xvbmUpO1xuICAgICAgTmF0aXZlTW9kdWxlcy5GcmFtZVJhdGVMb2dnZXIuc2V0R2xvYmFsT3B0aW9ucyhvcHRpb25zQ2xvbmUpO1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogTXVzdCBjYWxsIGBzZXRDb250ZXh0YCBiZWZvcmUgYW55IGV2ZW50cyBjYW4gYmUgcHJvcGVybHkgdHJhY2tlZCwgd2hpY2ggaXMgZG9uZSBhdXRvbWF0aWNhbGx5XG4gICAqIGluIGBBcHBSZWdpc3RyeWAsIGJ1dCBuYXZpZ2F0aW9uIGlzIGFsc28gYSBjb21tb24gcGxhY2UgdG8gaG9vayBpbi5cbiAgICovXG4gIHNldENvbnRleHQ6IGZ1bmN0aW9uKGNvbnRleHQ6IHN0cmluZykge1xuICAgIE5hdGl2ZU1vZHVsZXMuRnJhbWVSYXRlTG9nZ2VyICYmXG4gICAgICBOYXRpdmVNb2R1bGVzLkZyYW1lUmF0ZUxvZ2dlci5zZXRDb250ZXh0KGNvbnRleHQpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBDYWxsZWQgaW4gYFNjcm9sbFJlc3BvbmRlcmAgc28gYW55IGNvbXBvbmVudCB0aGF0IHVzZXMgdGhhdCBtb2R1bGUgd2lsbCBoYW5kbGUgdGhpc1xuICAgKiBhdXRvbWF0aWNhbGx5LlxuICAgKi9cbiAgYmVnaW5TY3JvbGwoKSB7XG4gICAgTmF0aXZlTW9kdWxlcy5GcmFtZVJhdGVMb2dnZXIgJiZcbiAgICAgIE5hdGl2ZU1vZHVsZXMuRnJhbWVSYXRlTG9nZ2VyLmJlZ2luU2Nyb2xsKCk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIENhbGxlZCBpbiBgU2Nyb2xsUmVzcG9uZGVyYCBzbyBhbnkgY29tcG9uZW50IHRoYXQgdXNlcyB0aGF0IG1vZHVsZSB3aWxsIGhhbmRsZSB0aGlzXG4gICAqIGF1dG9tYXRpY2FsbHkuXG4gICAqL1xuICBlbmRTY3JvbGwoKSB7XG4gICAgTmF0aXZlTW9kdWxlcy5GcmFtZVJhdGVMb2dnZXIgJiYgTmF0aXZlTW9kdWxlcy5GcmFtZVJhdGVMb2dnZXIuZW5kU2Nyb2xsKCk7XG4gIH0sXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZyYW1lUmF0ZUxvZ2dlcjtcbiJdfQ==