{"version":3,"sources":["SafeAreaView.js"],"names":["Platform","require","React","View","exported","OS","props","emulateUnlessSupported","Component","RCTSafeAreaViewNativeComponent","module","exports"],"mappings":";;;;;;;;;;;;;;;;AAUA,IAAMA,QAAQ,GAAGC,OAAO,4BAAxB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,IAAME,IAAI,GAAGF,OAAO,gBAApB;;AASA,IAAIG,QAAJ;;AAWA,IAAIJ,QAAQ,CAACK,EAAT,KAAgB,SAApB,EAA+B;AAC7BD,EAAAA,QAAQ;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BACe;AAAA,0BACwB,KAAKE,KAD7B;AAAA,YACZC,sBADY,eACZA,sBADY;AAAA,YACeD,KADf;AAEnB,eAAO,oBAAC,IAAD,EAAUA,KAAV,CAAP;AACD;AAJK;AAAA;AAAA,IAA8BJ,KAAK,CAACM,SAApC,CAAR;AAMD,CAPD,MAOO;AACL,MAAMC,8BAA8B,GAAGR,OAAO,oCAA9C;;AACAG,EAAAA,QAAQ;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BACe;AACnB,eACE,oBAAC,8BAAD;AACE,UAAA,sBAAsB,EAAE;AAD1B,WAEM,KAAKE,KAFX,EADF;AAMD;AARK;AAAA;AAAA,IAA8BJ,KAAK,CAACM,SAApC,CAAR;AAUD;;AAEDE,MAAM,CAACC,OAAP,GAAiBP,QAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nconst Platform = require('../../Utilities/Platform');\nconst React = require('react');\nconst View = require('../View/View');\n\nimport type {ViewProps} from '../View/ViewPropTypes';\n\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n  emulateUnlessSupported?: boolean,\n|}>;\n\nlet exported;\n\n/**\n * Renders nested content and automatically applies paddings reflect the portion\n * of the view that is not covered by navigation bars, tab bars, toolbars, and\n * other ancestor views.\n *\n * Moreover, and most importantly, Safe Area's paddings reflect physical\n * limitation of the screen, such as rounded corners or camera notches (aka\n * sensor housing area on iPhone X).\n */\nif (Platform.OS === 'android') {\n  exported = class SafeAreaView extends React.Component<Props> {\n    render(): React.Node {\n      const {emulateUnlessSupported, ...props} = this.props;\n      return <View {...props} />;\n    }\n  };\n} else {\n  const RCTSafeAreaViewNativeComponent = require('./RCTSafeAreaViewNativeComponent');\n  exported = class SafeAreaView extends React.Component<Props> {\n    render(): React.Node {\n      return (\n        <RCTSafeAreaViewNativeComponent\n          emulateUnlessSupported={true}\n          {...this.props}\n        />\n      );\n    }\n  };\n}\n\nmodule.exports = exported;\n"]}